
//TODO - potential automated unit tests maybe for like jenkins or smoething
//passwords match in authentication
//check the various test cases in the create user form like checking if an object is returned, or if syntax is correct when getting a username, database returns a user
//profile throws an error if you try to put a letter in the database query that checks for an id
//maybe possible to unit test a view?  profile.ejs has logic checking if a user is logged in or if a user is the currently viewed profile
//test logic that checks if user is logged in in general


/*
<!--
add permissions functionality
update user so that post shows up in history
update user so comments shows up in history
-->

//current status
<!--
user functionality
user can delete own posts/comments - done but not auto tested
user can view posts/comments - untested
ensure other users cannot see private post  - untested
update counts on profile page - untested
allow superuser to delete/view post/comments - untested
allow superuser to edit comments - untested
add to subscription db - untested
add to read db - untested
bug -     err http headers when loading list of comments and list of posts for a user - fixed, untested
bug - private posts breaks lists of posts - fixed, untested
need to add profile pic editing lol - done, not tested
update profile pics on front end - done not tested

later - add to read db - probably a cleaner way to do this part other than throwing random exceptions.   look into it.
profile options

-->

<!--
feed functionality
tags - maybe need to add it when user actually posts, and then have way to add it after - done but not auto tested

display all posts  - done, untested
  -pagination - done, but not sure if this is best way to implement.  we'll see once we start working on tabs.
    implemented server side i think - done, not tested
    next page and previous page - done, not tested

implement bookmarking - done, untested
  -todo - add a page that says bookmarked already error

tabs - done but untested
  -comments
  -views
  -date

filters - done but untested
  -read/unread
  -subs
  -bookmarked

integrate into template - done but untested
  -tabs and filters

search tags
  -string parse - done but untested, 
  -delete tags, move them into posts as an array
    -make sure it is still possible to add and remove tags and all that - done but not auto tested
  -bin index - done but untested
  -integrate string parse to the database. - done but untested
 - fast search searches by tags - done but unteseted
-->

<!--
    bug
    write form doesn't actually autopopulate fields when it doesn't pass db check - untested
    spaces between lines of letters in reading post
    bug -     write form not autopopulating edits -partially done - need solution filling (save users progress? grab old post? different errors might need different results)
      -private vs public not autopopulated
    had some issues with all/unread/subs/bookmarked functionality.  wasn't working when not logged in (which is intended) but i thought it was a bug.  maybe
      need a way to clearly mark that you gotta login for it. - done but untested
    post tag - no check if user is logged in (for pretty mmuch any post request).
      

later - in relation to tabs filters and sorts
  -do not display private posts/ maybe display your own posts?
  -stretch is have page numbers.  difficult bc i dont know how many pages ill have/how to template it.
  TODO - feedSort and feedFilter need testing and error handling



-->
<!---->




<!--technical debt
styling - maybe try to put it into style sheets
unit testing - maybe figure out how to do that + automated testing
-->*/

//read how to handle gmail api promises and returns stackoverflow..
//create an async get all gmail emails..
//create async get unread emails that also sets emails to read - done sans async
//create function that interacts with db using the unread emails - done

//create tickets table and also add field to users that sets to email or not email and ability to turn on and off - done, not tested
  //requires a settings page - done, not tested
//need a function that parses the first message of email thread, not the reply part. - done, not tested

//create function that sends emails once a day and adds tickets - done but untested
//modify add to db function with tickets (see the bottom part titled tickets table) - done but untested
//implement scheduler - done
//need to add strategic logging messages and clean up the code a little bit. - done

//comment replies/notification

/*
tickets table
email of user + 8 char code
tickets are generated every time email is sent
  need to confirm it is possible to send an email and set reply email using code - done, it is possible

user responds to email that is sent
  get users email + the reply code, search tickets table - done, not tested
    if found, post to db.  if not found, discard (it just logs error) - done, not tested
      concerns are if user replies to email and it isn't found
      */



//reada page
  //edit post when wrong user redirects without using bookmark causing an error - neet test


//create an error handling page (example 404 page, please try again.) - need test


  //time zones and such

  //<div>Icons made by <a href="https://www.flaticon.com/authors/freepik" title="Freepik">Freepik</a> from <a href="https://www.flaticon.com/" title="Flaticon">www.flaticon.com</a></div>

  //db for testing/seeding data
  //look up app.close error tcpserverwrap jest when you start working on deploy

  //minor features for 1.0
    //password reset - done, need to check for security issues/test
    //search by username or post title - done, need test
    //button on post to return - done, need test
    //add the 1 week/1month/1 year ago feature - done, need test
      //need to strip html from sent message - done, need test
    //add link to profile - done, need test
    //unbookmark spacing - done, need test
    //timezones - done, need test
      //front end show timezones on register x
      //front end show timezones on options x
      //update db to store users timezone preference x
      //modify models for account and post bc u changed it x
      //back end store timezones on register x
      //map - convert timezone name to an integer, store that int to db.  Counter running, select query will be 'when tz = counter'. x
      //update emailer to email every hour, but only email if timezone preference is currently aligned - x


    //post not bolding - fixed



//only sending 1 email-fixed

//frontend bugs
//error when clicking bookmark when not logged in.  just redirect to error page for now, but says post not found even though should be acct not logged in??
  //works fine when doing it from profile (subscribe and unsubscribe from user)
//cant rerender comment with error.  currently just redirecting to page with empty comment
//if on later page then search, says that page in url even search should begin on page 1.  will need to look into search results that have multiple pages
//file too large error page addition/change

//backend bugs
//image upload weird when uploading long image
//scheduler not really working




    //automated testing fixes, feature testing, cleanup and error pages (remove console.logs unless needed), deploy


//list of stretch goals
//known issues emailer
//html taken literally aka it'll break lines halfway through the page bc thats what the html says - stretch
//attachments, pictures, links not working - stretch
//authResetEmail getNewToken doesn't call function. - strecth

  //email sending ** for bold - stretch, not working bc simpleparser textAsHtml vs HTML.
  //search/sort posts by user (profile page) - stretch, requires refactoring
  //back end update timezones on register - change to selector stretch, not sure why its not working

//stretch - add function that adds "Last month today/last year today/ last week today type message to send emails."
<!--edit post
    stretch: referrer so that you can only get to write from the edit button.
    stretch: edit button location
    later: edit quill toolbaar
-->
<!--post comment
later: styling for comments and post page in general
stretch: reply to comments
-->
later - search
  -stretch is full text search